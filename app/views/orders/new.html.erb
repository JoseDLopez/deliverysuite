<div class="container">
	<div class="row">
		<div class="col-xs-6 col-xs-offset-3">
		
			<div class="panel panel-default">
				<h2 class="text-center">Nueva Orden</h2>
			</div>
		</div>
	</div>

	<div class="row">
		<div class="col-md-12">

			<div class="panel panel-default">
				<div class="panel-heading">
					<h4 class="text-center">Datos Cliente</h4>
				</div>
			</div>

			<div class="col-md-4">
				<form class="client_form">
					<div class="form-group">
						<label for="client_input_phone">Número Telefónico:</label>
						<input type="tel" class="form-control" id="client_input_phone" placeholder="0056912345678">
					</div>
					<div class="form-group">
						<label for="client_input_name">Nombres:</label>
						<input type="text" class="form-control" id="client_input_name" placeholder="Carlos">
					</div>
					<div class="form-group">
						<label for="client_input_lastname">Apellidos:</label>
						<input type="text" class="form-control" id="client_input_lastname" placeholder="Delgado">
					</div>
					<div class="form-group">
						<label for="client_input_email">Correo:</label>
						<input type="email" class="form-control" id="client_input_email" placeholder="example@correo.com">
					</div>
					<div class="form-group">
						<label for="client_input_rut">RUT:</label>
						<input type="text" class="form-control" id="client_input_rut" placeholder="15.583.192-K">
					</div>
					<div class="form-group">
						<label for="client_input_remark">Observaciones:</label>
						<input type="text" class="form-control" id="client_input_remark" placeholder="Cerca de...">
					</div>
				</form>				
			</div>

			<div class="col-md-8">
				<form class="client_form">
					<div class="form-group">
						<label for="client_input_address">Dirección:</label>
						<input type="text" class="form-control" id="client_input_address" placeholder="Av. Matta 234, Santiago Centro, Chile">
					</div>
				</form>
				<label id="latitudelabel"></label> | <label id="longitudelabel"></label>
				<div id="new_client_map" style='height: 300px;'></div>
				<br>
				<button type="submit" class="btn btn-success" id="create_client_button">Crear Cliente</button>
				<button type="submit" class="btn btn-primary" id="update_client_button">Actualizar Cliente</button>
				<%= notice %>
			</div>

		</div>
	</div>

	<div class="row">
		<div class="col-md-6">
			<div class="panel panel-default">
				<div class="panel-heading">
					<h4 class="text-center">Seleccionar Productos</h4>
				</div>
			</div>
			<label> Buscar por Categoría:
				<select class="selectpicker" data-live-search="true">
					<option data-tokens="">-- Todos --</option>
					<% @categories.order(:name).each do |cat| %>
						<option data-tokens="<%= cat.name %>"><%= cat.name %>: <%= cat.description %></option>
					<% end %>
				</select>
			</label>


			<table class="table table-hover table-sm" id="products_list_table">
			  <thead id="products_list_table_head">
			    <tr>
			      <th>Nombre</th>
			      <th>Descripción</th>
			      <th>Precio</th>
			      <th>Referencia</th>
			      <th>Acción</th>
			    </tr>
			  </thead>
			  <tbody id="products_list_table_body">
				<% @products.order(:name).each do |pro| %>
					<tr>
						<td><%= pro.name %></td>
						<td><%= pro.description %></td>
						<td><%= pro.price %></td>
						<td><img class="img-responsive" src="<%= pro.picture %>" alt="" style="height: 50px;"></td>
						<td>
							<%= link_to products_path, class: "button" do %>
								<i class="glyphicon glyphicon-minus"></i>
							<% end %> ||
							<%= link_to products_path, class: "button" do %>
								<i class="glyphicon glyphicon-plus"></i>
							<% end %>
						</td>
					</tr>
				<% end %>
			  </tbody>
			</table>

		</div>

		<div class="col-md-6">
			<div class="panel panel-default">
				<div class="panel-heading">
					<h4 class="text-center">Resumen</h4>
				</div>
			</div>
			<table class="table table-hover table-sm" id="order_products_table">
			  <thead id="order_products_table_head">
			    <tr>
			      <th>#</th>
			      <th>Nombre</th>
			      <th>Cantidad</th>
			      <th>Monto Unidad</th>
			      <th>Subtotal</th>
			      <th>Acción</th>
			    </tr>
			  </thead>
			  <tbody id="order_products_table_body">
			    <tr>
			      <th scope="row">1</th>
			      <td>Mark</td>
			      <td>Otto</td>
			      <td>@mdo</td>
			      <td>@mdo</td>
			      <td class="text-center">
			      	<%= link_to products_path, class: "button btn-danger" do %>
						<i class="glyphicon glyphicon-remove"></i>
					<% end %>
			      </td>
			    </tr>
			  </tbody>
			</table>
			<button type="submit" class="btn btn-warning">Crear Orden</button>
		</div>
	</div>
</div>






<script>
	document.addEventListener("turbolinks:load",function(){

	// INICIALIZAR
	var mapita;
	$("#create_client_button").prop('disabled', true);
	$("#update_client_button").prop('disabled', true);
	$(".client_form").submit(function(e) {
		e.preventDefault();
	});
	// $("#client_input_phone").val("056");

	// SCRIPT PARA LOS MAPAS /////////////////////////////
	if ($("#new_client_map").length > 0){

		$.getScript("//maps.google.com/maps/api/js?key=AIzaSyCp5ZLMmxEH6dtxWB8Ni20RWLMZIDuthsE&libraries=geometry").success(function(){


			$.getScript("//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js").success(function(){

				$.getScript("//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js").success(function(){
					var created_elements = [];
					initMap();

					function initMap(){
						mapita = new google.maps.Map(document.getElementById('new_client_map'), {
							zoom: 13,
							center: {lat: -33.453703, lng: -70.633799}
						});
					}

					// SCRIPT PARA LOS CALLBACKS /////////////////////////////
					$("#client_input_phone").keypress(function(e) {
					    if(e.which == 13) {
					        searchClientByNumber($("#client_input_phone").val());
					    }
					});

					$("#client_input_address").keypress(function(e) {
					    if(e.which == 13) {
					        loadMarkerIntoMap($("#client_input_address").val());
					    }
					});

					mapita.addListener("rightclick", function(evt) {

						if (confirm('¿Estas seguro de que quieres cambiar la ubicación del usuario?')) {
							alert("Nueva ubicación de usuario");
							var mylatlang = evt.latLng;
							var lati = mylatlang.lat();
							var long = mylatlang.lng();
							$("#client_latitude").val(lati);
							$("#client_longitude").val(long);
							setClientMarker(lati,long);
							loadAddressIntoInputField(lati,long);
						}



					});


					// SCRIPT PARA LAS FUNCIONES ////////////////////////////////
					function clearMapBefore(){
						for (var i = 0; i < created_elements.length; i++) {
							created_elements[i].setMap(null);
						}
						created_elements =[];
					}

					function clearInputClientFields(){
						$("#client_input_name").val("");
						$("#client_input_lastname").val("");
						$("#client_input_email").val("");
						$("#client_input_rut").val("");
						$("#client_input_remark").val("");
						$("#client_input_address").val("");
						$("#latitudelabel").html("");
						$("#longitudelabel").html("");
						clearMapBefore();
					}

					function loadAddressIntoInputField(lati,long){
						var latilong = new google.maps.LatLng(lati,long);
						var geocoder = new google.maps.Geocoder;

						geocoder.geocode({'location':latilong},function(results, status){
							if (status === 'OK'){
								if (results[0]){
									$("#client_input_address").val(results[0].formatted_address);
								}else{
									window.alert("No se encuentran direcciones con esas coordenadas");
								}
							}else{
								window.alert('Geocoder failed due to: ' + status);
							}
						});
					}

					function loadMarkerIntoMap(string){
						var geocoder = new google.maps.Geocoder;
						geocoder.geocode( { 'address': string}, function(results, status) {
						  if (status == 'OK') {
						    mapita.setCenter(results[0].geometry.location);
						    var marker = new google.maps.Marker({
						        map: mapita,
						        position: results[0].geometry.location
						    });
						    created_elements.push(marker);
							var latitu = marker.getPosition().lat();
							var longit = marker.getPosition().lng();
							setClientMarker(latitu,longit);
						    mapita.setCenter(results[0].geometry.location);
						  } else {
						    alert('Error estableciendo el marcador' + status);
						  }
						});
					}


					function searchClientByNumber(numero){
						if ((numero.charAt(0)=="0") && (numero.length == 13)){
							$.post('/checknumber?phone='+numero,function(data){
								if (data.client_exist == true){
									loadClientInfo(data.client[0]);
								}else{
									$("#create_client_button").prop('disabled', false);
									$("#update_client_button").prop('disabled', true);
									clearInputClientFields();
									alert("Es un cliente nuevo");
								}
							});
						}
					}

					function loadClientInfo(cliente){
						$("#create_client_button").prop('disabled', true);
						$("#update_client_button").prop('disabled', false);
						$("#client_input_name").val(cliente.name);
						$("#client_input_lastname").val(cliente.lastname);
						$("#client_input_email").val(cliente.email);
						$("#client_input_rut").val(cliente.rut);
						$("#client_input_remark").val(cliente.remark);
						$("#client_input_address").val(cliente.address);
						$("#latitudelabel").html(cliente.latitude);
						$("#longitudelabel").html(cliente.longitude);
						setClientMarker(cliente.latitude,cliente.longitude);
					}

					function setClientMarker(lati,long){
						clearMapBefore();
						var myLatLng = {lat: lati, lng: long};
						var marker = new google.maps.Marker({
						    position: myLatLng,
						    map: mapita
						  });
						created_elements.push(marker);
						mapita.setCenter(marker.getPosition());
						var estaen = {};
						var poligono;
						var curPosition = new google.maps.LatLng(lati,long);
						zonas = <%= raw @zones.to_json %>;
						zonas.forEach(function(zona){
							var todraw = getPointsArray(zona.dots);
							drawPolygon(todraw, zona.name, zona.price, zona.id);

							if (google.maps.geometry.poly.containsLocation(curPosition, poligono) == true){
								if (estaen.length > 0){
									if (estaen.price > zona.price){
										estaen = zona;
									}
								}else{
									estaen = zona;	
								}
							}
						})
						console.log(estaen);


						function getPointsArray(recibido){
											var arraypuntos = [];
											var puntos = recibido;
											if (puntos == null){
												return;
											}
											var corarr =[];
											var cadena ="";
											var estado ="";

											var olat = 0;
											var olon = 0;

											var objeto ={};

											for (var i = 0; i < puntos.length; i++){
												var guardar = false;
												if (puntos[i] == "("){
													estado = "iniciolatitude";
													guardar = false;
												}

												if (puntos[i] == ","){
													estado = "iniciolongitude";
													if (cadena.length > 0){	
														corarr.push(cadena);
													}
													cadena="";
													guardar = false;
												}

												if (puntos[i] == ")"){
													estado = "fin";
													corarr.push(cadena);
													
													cadena="";
													guardar = false;

													olat = parseFloat(corarr[0]);
													olon = parseFloat(corarr[1]);
													corarr = [];

													// objeto = new google.maps.LatLng(olat,olon); 
													objeto = {lat: olat, lng: olon};
													arraypuntos.push(objeto);
													objeto={};
													estado=""

												}

												if ((puntos[i] != "(") & (puntos[i] != ",") & (puntos[i] != ")") & (puntos[i] != " ")){
													guardar = true;
												}

												if (guardar == true){
													cadena += puntos[i];
												}
											}

											puntos = arraypuntos;
											return puntos;
						}

						function drawPolygon(obj,name,price,zoneid){
					        poligono = new google.maps.Polygon({
					          paths: obj,
					          strokeColor: '#FF0000',
					          strokeOpacity: 0.8,
					          strokeWeight: 2,
					          fillColor: '#FF0000',
					          fillOpacity: 0.35
					        });
					        created_elements.push(poligono);
					        poligono.setMap(mapita);
							infoWindow = new google.maps.InfoWindow;
							poligono.addListener('click', function(e){
								infoWindow.setContent('<b>Nombre: '+ name +'</b><br>'+'Precio: '+price+'</br><br>'+'Ver: '+ '<a href="/zones/'+zoneid+'">Enlace</a>' + '</br>');
								infoWindow.setPosition(e.latLng);

								infoWindow.open(mapita);
							});
						}
					}







				});

			});

		});
	}








});
</script>
